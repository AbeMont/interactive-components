/* Demo Purposes Only */
.demo-btn {
  background: #651142;
  color: #fff;
  padding: 16px;
  border: none;
  margin-top: 10px;
  cursor: pointer;
  margin: 0 16px; }

.component-list ul {
  width: 150px;
  list-style-type: none;
  padding: 0; }
  .component-list ul li a {
    color: #121212;
    text-decoration: none;
    display: block;
    padding: 8px 0px; }
    .component-list ul li a:hover {
      color: #0000fa; }

.hero {
  background: #CB87AF;
  padding: 72px 0;
  min-height: 350px; }
  .hero h1.hero-title {
    text-align: center;
    margin: 0; }

.container {
  width: 85%;
  margin: 0 auto; }

.scroll-spy-section {
  padding: 64px 0; }
  .scroll-spy-section h3 {
    margin: 0; }
  .scroll-spy-section p {
    margin: 24px 0; }

.demo-modal-section {
  width: 25%;
  margin: 0 auto; }
  .demo-modal-section .demo-modal-btn {
    background: #651142;
    color: #fff;
    padding: 16px;
    border: none;
    margin-top: 10px;
    cursor: pointer; }

.horizontal-switches:first-child {
  padding-top: 25px; }

.scroll-spy__wrapper {
  box-shadow: 0 1px 5px 1px rgba(0, 0, 0, 0.4);
  width: 100%;
  min-height: 56px;
  position: sticky;
  color: #fff;
  display: flex;
  flex-direction: column;
  justify-content: center;
  transition: all 0.4s; }
  .scroll-spy__wrapper--purple {
    background: #651142; }

.scroll-spy__elements {
  width: 85%;
  margin: 0 auto;
  display: flex; }
  .scroll-spy__elements .scroll-spy__heading {
    flex: 1; }
  .scroll-spy__elements .scroll-spy__title {
    flex: 1;
    text-align: right; }
  .scroll-spy__elements h4, .scroll-spy__elements p {
    margin: 0; }

.scroll-spy__meter {
  height: 5px;
  background: #0EBDCC;
  position: absolute;
  top: 51px; }

.scroll-spy.active .scroll-spy__wrapper {
  position: fixed;
  animation-duration: 0.4s;
  animation-name: spy-slide-down; }

.scroll-nav {
  position: fixed;
  /* offset-x | offset-y | blur-radius | spread-radius | color */
  box-shadow: 2px 2px 16px 1px rgba(0, 0, 0, 0.4);
  right: 50px;
  bottom: 15%;
  transform: translateX(200px);
  transition: all 0.3s; }
  .scroll-nav ul {
    list-style-type: none;
    padding: 0;
    background: #651142;
    padding: 10px;
    margin: 0; }
    .scroll-nav ul li {
      padding: 10px 16px 10px 16px; }
      .scroll-nav ul li a {
        font-size: 14px;
        color: #fff;
        text-decoration: none;
        opacity: 0.7; }
        .scroll-nav ul li a.active {
          opacity: 1; }

@keyframes spy-slide-down {
  from {
    transform: translateY(-56px); }
  to {
    transform: translateY(0px); } }

@keyframes spy-nav-slide {
  from {
    transform: translateX(200px); }
  to {
    transform: translateX(0px); } }

@media (min-width: 450px) {
  .scroll-nav {
    transform: translateX(0px);
    animation-duration: 0.3s;
    animation-name: spy-nav-slide; } }

.accordion {
  width: 100%;
  background: #CB87AF; }
  .accordion__btn {
    padding: 16px;
    border: none;
    display: block;
    background: #651142;
    color: #fff;
    width: 100%;
    border-bottom: 1px solid rgba(255, 255, 255, 0.3); }
    .accordion__btn:hover {
      cursor: pointer; }
  .accordion__content {
    padding: 0 16px;
    max-height: 0;
    overflow-y: hidden;
    transition: all 0.5s ease-out; }
    .accordion__content.active {
      height: auto;
      transition: all 0.5s ease-out; }

.modal {
  width: 100%;
  position: fixed;
  display: none; }
  .modal__body {
    max-width: 350px;
    margin: 56px auto;
    position: relative;
    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    animation-name: animate-modal-down;
    animation-timing-function: ease-out;
    animation-duration: 0.2s; }
  .modal__title {
    position: relative;
    border-radius: 4px 4px 0 0;
    background: #651142;
    padding: 20px 0px; }
    .modal__title h1, .modal__title h2, .modal__title h3, .modal__title h4, .modal__title h5, .modal__title h6 {
      color: #fff;
      margin: 0;
      padding: 0px 32px; }
  .modal__content {
    background: #fff;
    border-radius: 0 0 4px 4px;
    height: auto; }
    .modal__content p {
      margin: 0;
      padding: 32px; }
  .modal__closeBtn {
    position: absolute;
    right: 8px;
    top: 8px;
    background: none;
    border: none;
    color: #fff;
    font-size: 18px;
    z-index: 1; }
    .modal__closeBtn:hover {
      cursor: pointer; }
  .modal:after {
    content: "";
    background: #000;
    height: 100vh;
    width: 100%;
    opacity: 0.3;
    position: absolute;
    top: 0;
    z-index: -1; }
  .modal.active {
    display: block; }

@media (min-width: 500px) {
  .modal__body {
    max-width: 450px; } }

@media (min-width: 750px) {
  .modal__body {
    max-width: 650px; } }

@keyframes animate-modal-down {
  from {
    top: -365px; }
  to {
    top: 0px; } }

@keyframes animate-modal-up {
  from {
    top: 0px; }
  to {
    top: -365px; } }

.tabs__nav ul {
  list-style-type: none;
  padding: 0;
  margin: 0; }
  .tabs__nav ul li {
    display: inline-block; }
    .tabs__nav ul li button {
      border: none;
      cursor: pointer;
      text-decoration: none;
      background: #651142;
      color: #fff;
      padding: 16px;
      border-radius: 5px 5px 0px 0px;
      display: block; }

.tabs__section {
  background: #CB87AF;
  display: none;
  border-radius: 0 5px 5px 5px;
  padding: 16px;
  box-shadow: 3px 3px 8px #aaaaaa; }
  .tabs__section p {
    margin: 0; }
  .tabs__section.active {
    display: block; }
    .tabs__section.active .tabs__content-wrapper {
      animation-name: tabs;
      animation-duration: 0.5s; }

@keyframes tabs {
  from {
    opacity: 0;
    transform: translateY(25px); }
  to {
    opacity: 1;
    transform: translateY(0px); } }

.side-nav-accordion {
  top: 0;
  background: #651142;
  position: fixed;
  height: 100vh;
  width: 250px;
  transform: translateX(-250px);
  transition: transform 0.4s ease-in; }
  .side-nav-accordion.active {
    transform: translateX(0);
    transition: transform 0.4s ease-out; }
  .side-nav-accordion ul {
    margin: 26px 0 0 0;
    padding: 26px 0 0 0;
    width: 100%; }
    .side-nav-accordion ul li {
      list-style-type: none;
      background: #651142; }
      .side-nav-accordion ul li a {
        font-size: 14px;
        display: block;
        text-decoration: none;
        color: #fff;
        padding: 12px 12px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.3); }
        .side-nav-accordion ul li a i {
          float: right; }
          .side-nav-accordion ul li a i:before {
            display: block;
            transition: transform 0.4s;
            font-size: 15px; }
        .side-nav-accordion ul li a.active i:before {
          transform: rotate(180deg);
          transition: transform 0.4s; }
    .side-nav-accordion ul.sub-section {
      background: #CB87AF;
      margin-top: 0;
      padding-bottom: 0;
      padding-top: 0;
      height: 0;
      overflow: hidden;
      transition: height 0.3s ease-out; }
      .side-nav-accordion ul.sub-section li {
        background: #CB87AF; }
        .side-nav-accordion ul.sub-section li a {
          padding-left: 24px;
          color: #000; }
  .side-nav-accordion .close-btn {
    cursor: pointer;
    color: #fff;
    font-size: 18px;
    position: absolute;
    right: 10px;
    padding-top: 10px;
    background: none;
    border: none; }

.switch {
  width: 45px;
  margin: 5px;
  display: inline-block;
  cursor: pointer; }
  .switch__input {
    border-radius: 3px;
    width: 45px;
    height: 25px;
    background: #CB87AF;
    position: relative;
    box-shadow: 3px 3px 8px #aaaaaa; }
    .switch__input input {
      cursor: pointer;
      position: absolute;
      opacity: 0;
      display: block;
      width: 100%;
      height: 100%;
      margin: 0;
      z-index: 9999; }
    .switch__input input[type=checkbox]:checked + span.switch__dial {
      background: #651142;
      opacity: 1;
      transition: all 0.2s;
      transform: translateX(25px);
      z-index: 0; }
      .switch__input input[type=checkbox]:checked + span.switch__dial:after {
        content: "I";
        animation-name: switches-IO;
        animation-timing-function: ease-in;
        animation-duration: 0.3s; }
    .switch__input input[type=checkbox]:disabled + span.switch__dial {
      background: #651142;
      opacity: 0.5;
      transition: all 0.2s ease-in;
      transform: translateX(0px);
      z-index: 0; }
    .switch__input input:focus + span.switch__dial:before {
      content: "";
      border-radius: 3px;
      border: 1px solid #000;
      position: absolute;
      width: 95%;
      height: 91%;
      left: 0; }
  .switch__dial {
    border-radius: 3px;
    top: 0;
    height: 25px;
    width: 20px;
    background: #651142;
    opacity: 0.5;
    position: absolute;
    transition: all 0.2s ease-in;
    transform: translateX(0px);
    z-index: 0;
    text-align: center; }
    .switch__dial:after {
      content: "O";
      color: #fff;
      font-size: 12px;
      position: relative;
      top: 2px;
      animation-name: switches-IO-back;
      animation-duration: 0.3s;
      animation-timing-function: ease-in; }
  .switch__desc {
    text-align: center;
    display: flex; }
    .switch__desc label {
      cursor: pointer;
      display: inline-block;
      font-size: 12px;
      width: 45px;
      padding: 3px;
      opacity: 1;
      transition: opacity 0.2s; }
  .switch--vertical {
    height: 75px;
    margin: 5px;
    display: inline-block;
    cursor: pointer; }
    .switch--vertical .switch__input {
      border-radius: 3px;
      width: 25px;
      margin: 0 auto;
      height: 43px;
      background: #CB87AF;
      position: relative; }
      .switch--vertical .switch__input input {
        box-shadow: 3px 3px 8px #aaaaaa;
        cursor: pointer;
        position: absolute;
        opacity: 0;
        display: block;
        width: 100%;
        height: 100%;
        margin: 0;
        z-index: 9999; }
      .switch--vertical .switch__input input[type=checkbox]:checked + span.switch__dial {
        background: #651142;
        opacity: 1;
        transition: all 0.2s;
        transform: translateY(0px);
        z-index: 0; }
        .switch--vertical .switch__input input[type=checkbox]:checked + span.switch__dial:after {
          content: "I";
          animation-name: switches-IO;
          animation-timing-function: ease-in;
          animation-duration: 0.3s; }
      .switch--vertical .switch__input input[type=checkbox]:disabled + span.switch__dial {
        background: #651142;
        opacity: 0.5;
        transition: all 0.2s ease-in;
        transform: translateY(25px);
        z-index: 0; }
      .switch--vertical .switch__input input:focus + span.switch__dial:before {
        content: "";
        border-radius: 3px;
        border: 1px solid #000;
        position: absolute;
        width: 90%;
        height: 91%;
        left: 0; }
    .switch--vertical .switch__dial {
      border-radius: 3px;
      top: 0;
      height: 18px;
      width: 25px;
      background: #651142;
      opacity: 0.5;
      position: absolute;
      transition: all 0.2s ease-in;
      transform: translateY(25px);
      z-index: 0;
      text-align: center; }
      .switch--vertical .switch__dial:after {
        content: "O";
        color: #fff;
        font-size: 12px;
        position: relative;
        bottom: 1px;
        top: 0;
        animation-name: switches-IO-back;
        animation-duration: 0.3s;
        animation-timing-function: ease-in; }
    .switch--vertical .switch__desc {
      text-align: center;
      display: flex; }
      .switch--vertical .switch__desc label {
        cursor: pointer;
        display: inline-block;
        font-size: 12px;
        width: 45px;
        padding: 3px;
        opacity: 1;
        transition: opacity 0.2s; }
  .switch--disabled {
    opacity: 0.5; }
    .switch--disabled input {
      cursor: not-allowed; }
    .switch--disabled label {
      cursor: not-allowed; }

@keyframes switches-IO {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes switches-IO-back {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

body {
  font-family: sans-serif;
  margin: 0;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

* {
  -webkit-tap-highlight-color: transparent;
  outline: none; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
